// SPDX-License-Identifier: GPL-3.0-or-later

pragma solidity 0.8.14;

import "forge-std/Test.sol";
import { ERC1967Proxy } from "openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol";

import { Link3ProfileDescriptor } from "../../src/periphery/Link3ProfileDescriptor.sol";
import { DataTypes } from "../../src/libraries/DataTypes.sol";

contract Link3ProfileDescriptorTest is Test {
    Link3ProfileDescriptor internal descriptor;
    address constant owner = address(0xA11CE);
    string animationTemplate = "https://animation.example.com";

    event Upgraded(address indexed implementation);
    event SetAnimationTemplate(string preTemplate, string template);

    function setUp() public {
        Link3ProfileDescriptor descriptorImpl = new Link3ProfileDescriptor();
        bytes memory data = abi.encodeWithSelector(
            Link3ProfileDescriptor.initialize.selector,
            animationTemplate,
            owner
        );
        ERC1967Proxy proxy = new ERC1967Proxy(address(descriptorImpl), data);
        descriptor = Link3ProfileDescriptor(address(proxy));
    }

    function testBasic() public {
        assertEq(descriptor.animationTemplate(), animationTemplate);
    }

    function testCannotSetAnimationTemplateNonProfile() public {
        vm.expectRevert("UNAUTHORIZED");
        vm.prank(address(0));
        descriptor.setAnimationTemplate(animationTemplate);
    }

    function testSetAnimationTemplateAsProfile() public {
        vm.prank(owner);

        string memory newTemplate = "https://new.animation.example.com";
        vm.expectEmit(false, false, false, true);
        emit SetAnimationTemplate(animationTemplate, newTemplate);

        descriptor.setAnimationTemplate(newTemplate);
        assertEq(descriptor.animationTemplate(), newTemplate);
    }

    function testCannotSetAnimationTemplateAsNonOwner() public {
        vm.expectRevert("UNAUTHORIZED");
        descriptor.setAnimationTemplate("new_ani_template");
    }

    function testTokenURI() public {
        DataTypes.ConstructTokenURIParams memory params = DataTypes
            .ConstructTokenURIParams({
                tokenId: 0,
                handle: "alice",
                subscribers: 10
            });
        string memory tokenURI = descriptor.tokenURI(params);
        assertEq(
            tokenURI,
            "data:application/json;base64,"
        );
    }

    function testCannotUpgrade() public {
        vm.expectRevert("UNAUTHORIZED");
        descriptor.upgradeTo(address(0xDEAD));
    }

    function testUpgradeAsOwner() public {
        Link3ProfileDescriptor newAddr = new Link3ProfileDescriptor();
        vm.expectEmit(true, false, false, true);
        emit Upgraded(address(newAddr));
        vm.prank(owner);
        descriptor.upgradeTo(address(newAddr));
    }
}
