// SPDX-License-Identifier: GPL-3.0-or-later

pragma solidity 0.8.14;

import "../../src/periphery/ProfileNFTDescriptor.sol";
import "forge-std/Test.sol";
import "../../src/libraries/Constants.sol";
import { RolesAuthority } from "../../src/dependencies/solmate/RolesAuthority.sol";
import { Authority } from "../../src/dependencies/solmate/Auth.sol";
import { ERC1967Proxy } from "openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol";
import { TestLib712 } from "../utils/TestLib712.sol";
import { MockProfile } from "../utils/MockProfile.sol";
import { DataTypes } from "../../src/libraries/DataTypes.sol";

contract ProfileNFTDescriptorTest is Test {
    ProfileNFTDescriptor internal descriptor;
    MockProfile internal profile;
    address constant alice = address(0xA11CE);
    address constant bob = address(0xB0B);
    address constant owner = address(0xe);
    string animationTemplate = "https://animation.example.com";

    function setUp() public {
        profile = new MockProfile(address(0), address(0));
        ProfileNFTDescriptor impl = new ProfileNFTDescriptor(address(profile));
        bytes memory data = abi.encodeWithSelector(
            ProfileNFTDescriptor.initialize.selector,
            animationTemplate
        );
        ERC1967Proxy proxy = new ERC1967Proxy(address(impl), data);
        descriptor = ProfileNFTDescriptor(address(proxy));
    }

    function testBasic() public {
        assertEq(descriptor.animationTemplate(), animationTemplate);
    }

    function testCannotSetAnimationTemplateNonProfile() public {
        vm.expectRevert("ONLY_PROFILE");
        vm.prank(address(0));
        descriptor.setAnimationTemplate(animationTemplate);
    }

    function testSetAnimationTemplateAsProfile() public {
        vm.prank(address(profile));
        descriptor.setAnimationTemplate("https://new.animation.example.com");
        assertEq(
            descriptor.animationTemplate(),
            "https://new.animation.example.com"
        );
    }

    function testTokenURI() public {
        DataTypes.ConstructTokenURIParams memory params = DataTypes
            .ConstructTokenURIParams({
                tokenId: 0,
                handle: "alice",
                subscribers: 10
            });
        string memory tokenURI = descriptor.tokenURI(params);
        assertEq(
            tokenURI,
            "data:application/json;base64,"
        );
    }
}
