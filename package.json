{
  "name": "cybercontracts",
  "version": "1.0.0",
  "main": "index.js",
  "repository": "git@github.com:cyberconnecthq/cybercontracts.git",
  "author": "r@cyberconnect.me",
  "license": "GPL-3.0-or-later",
  "scripts": {
    "lint:gh-check": "prettier --check **.{sol,js,md,html}",
    "lint:check": "prettier --check **.{sol,js,md,html} && solhint --config ./config/.solhint.json --ignore-path ./config/.solhintignore -f table 'src/**/*.sol'",
    "lint:fix": "prettier --write **.{sol,js,md}",
    "prepare": "husky install",
    "build": "forge build --force",
    "deploy:anvil": "source .env.anvil && forge script script/Deploy.s.sol:DeployScript --fork-url http://localhost:8545 --private-key $PRIVATE_KEY --broadcast -vvv",
    "deploy:rinkeby": "source .env.rinkeby && forge script script/Deploy.s.sol:DeployScript --rpc-url $RINKEBY_RPC_URL --private-key $PRIVATE_KEY --broadcast --verify --etherscan-api-key $ETHERSCAN_KEY -vvv",
    "deploy:goerli": "source .env.goerli && forge script script/Deploy.s.sol:DeployScript --rpc-url $GOERLI_RPC_URL --private-key $PRIVATE_KEY --broadcast --verify --etherscan-api-key $ETHERSCAN_KEY -vvv",
    "deploy_cyberbox:goerli": "source .env.goerli && forge script script/DeployBox.s.sol:DeployScript --rpc-url $GOERLI_RPC_URL --private-key $PRIVATE_KEY --broadcast --verify --etherscan-api-key $ETHERSCAN_KEY -vvv",
    "deploy_cyberbox:mainnet": "source .env.mainnet && forge script script/DeployBox.s.sol:DeployScript --rpc-url $MAINNET_RPC_URL --private-key $PRIVATE_KEY --broadcast -vvv",
    "deploy_cyberbox:rinkeby": "source .env.rinkeby && forge script script/DeployBox.s.sol:DeployScript --rpc-url $RINKEBY_RPC_URL --private-key $PRIVATE_KEY --broadcast --verify --etherscan-api-key $ETHERSCAN_KEY -vvv",
    "deploy:mainnet": "source .env.mainnet && forge script script/Deploy.s.sol:DeployScript --rpc-url $MAINNET_RPC_URL --private-key $PRIVATE_KEY --broadcast -vvv",
    "deploy_dryrun:mainnet": "source .env.mainnet && forge script script/Deploy.s.sol:DeployScript --rpc-url $MAINNET_RPC_URL --private-key $PRIVATE_KEY -vvv",
    "pre_deploy": "node misc/pre_deploy.js",
    "post_deploy": "ts-node misc/post_deploy.ts",
    "upload_animation:anvil": "ts-node misc/set_animation_url.ts anvil-31337",
    "upload_animation:goerli": "ts-node misc/set_animation_url.ts goerli-5",
    "upload_animation:rinkeby": "ts-node misc/set_animation_url.ts rinkeby-4",
    "upload_animation:mainnet": "ts-node misc/set_animation_url.ts mainnet-1",
    "set_animation_url:anvil": "source .env.anvil && forge script script/animation_url/anvil-31337/SetAnimationURL.s.sol:SetAnimationURL --fork-url http://localhost:8545 --private-key $PRIVATE_KEY --broadcast -vvv",
    "set_animation_url:goerli": "source .env.goerli.link3 && forge script script/animation_url/goerli-5/SetAnimationURL.s.sol:SetAnimationURL --rpc-url $GOERLI_RPC_URL --private-key $PRIVATE_KEY --broadcast --verify --etherscan-api-key $ETHERSCAN_KEY -vvv",
    "set_animation_url:rinkeby": "source .env.rinkeby.link3 && forge script script/animation_url/rinkeby-4/SetAnimationURL.s.sol:SetAnimationURL --rpc-url $RINKEBY_RPC_URL --private-key $PRIVATE_KEY --broadcast --verify --etherscan-api-key $ETHERSCAN_KEY -vvv",
    "set_animation_url:mainnet": "source .env.mainnet.link3 && forge script script/animation_url/mainnet-1/SetAnimationURL.s.sol:SetAnimationURL --rpc-url $MAINNET_RPC_URL --private-key $PRIVATE_KEY --broadcast -vvvv",
    "qrtest": "rm -rf ./test/qrcode ./misc/qrcode/html ./misc/qrcode/svg && node misc/qrcode/gen-sol.js && mkdir -pv misc/qrcode/svg && forge test --match-contract QRSVGIntegration -vvv && node misc/qrcode/gen-html.js  && node misc/qrcode/puppet.js",
    "deploy_deployer:rinkeby": "source .env.rinkeby && forge script script/DeployCreate2Deployer.s.sol:DeployerCreate2Deployer --rpc-url $RINKEBY_RPC_URL --private-key $PRIVATE_KEY --broadcast --verify --etherscan-api-key $ETHERSCAN_KEY -vvv",
    "deploy_deployer:goerli": "source .env.goerli && forge script script/DeployCreate2Deployer.s.sol:DeployerCreate2Deployer --rpc-url $GOERLI_RPC_URL --private-key $PRIVATE_KEY --broadcast --verify --etherscan-api-key $ETHERSCAN_KEY -vvv",
    "deploy_deployer:mainnet": "source .env.mainnet && forge script script/DeployCreate2Deployer.s.sol:DeployerCreate2Deployer --rpc-url $MAINNET_RPC_URL --private-key $PRIVATE_KEY --broadcast -vvv --etherscan-api-key $ETHERSCAN_KEY -vvv",
    "deploy_deployer:polygon": "source .env.polygon && forge script script/DeployCreate2Deployer.s.sol:DeployerCreate2Deployer --rpc-url $POLYGON_RPC_URL --private-key $PRIVATE_KEY --broadcast -vvv --etherscan-api-key $ETHERSCAN_KEY -vvv",
    "deploy_deployer:bsc": "source .env.bsc && forge script script/DeployCreate2Deployer.s.sol:DeployerCreate2Deployer --rpc-url $BSC_RPC_URL --private-key $PRIVATE_KEY --broadcast -vvv --etherscan-api-key $ETHERSCAN_KEY -vvv",
    "deploy_deployer:anvil": "source .env.anvil && forge script script/DeployCreate2Deployer.s.sol:DeployerCreate2Deployer --fork-url http://localhost:8545 --private-key $PRIVATE_KEY --broadcast -vvv",
    "size": "hardhat size-contracts",
    "deploy_full:anvil": "yarn deploy:anvil && yarn upload_animation:anvil && yarn set_animation_url:anvil"
  },
  "devDependencies": {
    "axios": "^0.27.2",
    "chai": "^4.3.6",
    "dotenv": "^16.0.1",
    "ethers": "^5.6.9",
    "form-data": "^4.0.0",
    "hardhat": "^2.10.0",
    "hardhat-contract-sizer": "^2.6.1",
    "hardhat-preprocessor": "^0.1.4",
    "husky": "^8.0.1",
    "json5": "^2.2.1",
    "lint-staged": "^13.0.1",
    "prettier": "^2.7.1",
    "prettier-plugin-solidity": "^1.0.0-beta.19",
    "puppeteer": "^15.3.0",
    "puppeteer-cluster": "^0.23.0",
    "solhint": "^3.3.7",
    "solhint-plugin-prettier": "^0.0.5",
    "solidity-coverage": "^0.7.21",
    "ts-node": "^10.8.2",
    "typechain": "^8.1.0",
    "typescript": "^4.7.4"
  },
  "lint-staged": {
    "*.{sol,js,md,html}": "prettier --write"
  },
  "prettier": {
    "overrides": [
      {
        "files": "*.sol",
        "options": {
          "tabWidth": 4,
          "printWidth": 80,
          "bracketSpacing": true
        }
      }
    ]
  }
}
